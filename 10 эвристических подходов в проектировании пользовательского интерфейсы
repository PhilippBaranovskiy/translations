10 основных принципов в интерактивном дизайне Якоба Нельсона. Они называются "эвристическими" потому что являются набором широких практических подходов, а не конкретными рекомендациями по применению.

Видимость системной активности
    Система всегда должна держать пользователя в курсе того, что происходит путем обратной связи через приемлимое время.
     
Соответствие между системой и реальным миром
    Система должна говорить на языке пользоватея, со словами, фразами и структурой, понятной пользователю, а не терминами, понятными только системе. Следовать соглашениям реального мира подавая информацию в естественном для мира людей и логическом порядке.
     
Пользовательский контроль и свобода
    Пользователь часто делает что-то не то, и ему необходим четкий и понятный обозначенный "экстренный выход", чтобы уйти от нежелательного действа без лишних вопросов. Поддержка переходов вперед / назад по результатам своих действий.
     
Последовательность и шаблонность
    Пользователь не должен страдать из-за того, что разные слова, ситуации и действия значать одно и то же. Следуйте соглашениям платформы.
     
Защита от ошибок
    Вместо обработки ошибок хорошо спроектированными сообщениями об ошибках лучше хорошо спроектированный интерфейс, который будет устранять и обходить потенциально сложные для восприятия в первый раз места и снижать вероятность допущения ошибки. Либо при возникновении ошибки сразу предоставить пользователю варианты как ее обойти. В худшем случае просто уведомить что ошибка есть и рассказать каковы причины ее возникновения и на что для пользователя это повлияет в будущем.
    (Читай полную статью про предотвращению ошибок)
     
Recognition rather than recall
    Minimize the user's memory load by making objects, actions, and options visible. The user should not have to remember information from one part of the dialogue to another. Instructions for use of the system should be visible or easily retrievable whenever appropriate.
    (Read full article on recognition vs. recall in UX.)
     
Flexibility and efficiency of use
    Accelerators -- unseen by the novice user -- may often speed up the interaction for the expert user such that the system can cater to both inexperienced and experienced users. Allow users to tailor frequent actions.
     
Aesthetic and minimalist design
    Dialogues should not contain information which is irrelevant or rarely needed. Every extra unit of information in a dialogue competes with the relevant units of information and diminishes their relative visibility.
     
Help users recognize, diagnose, and recover from errors
    Error messages should be expressed in plain language (no codes), precisely indicate the problem, and constructively suggest a solution.
     
Help and documentation
    Even though it is better if the system can be used without documentation, it may be necessary to provide help and documentation. Any such information should be easy to search, focused on the user's task, list concrete steps to be carried out, and not be too large.
